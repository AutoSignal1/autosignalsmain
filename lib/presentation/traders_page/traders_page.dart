import '../traders_page/widgets/traderlist_item_widget.dart';import 'controller/traders_controller.dart';import 'models/traderlist_item_model.dart';import 'models/traders_model.dart';import 'package:auto_s_application1/core/app_export.dart';import 'package:auto_s_application1/widgets/custom_search_view.dart';import 'package:flutter/material.dart';import 'package:auto_s_application1/presentation/trader_det_one_bottomsheet/trader_det_one_bottomsheet.dart';import 'package:auto_s_application1/presentation/trader_det_one_bottomsheet/controller/trader_det_one_controller.dart';
// ignore_for_file: must_be_immutable
class TradersPage extends StatelessWidget {TradersController controller = Get.put(TradersController(TradersModel().obs));

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.whiteA700, body: Container(width: double.maxFinite, decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Expanded(child: SingleChildScrollView(child: Padding(padding: getPadding(top: 17), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomSearchView(focusNode: FocusNode(), controller: controller.group133Controller, hintText: "lbl_search_traders".tr, prefix: Container(margin: getMargin(left: 30, top: 21, right: 8, bottom: 12), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(52)), suffix: Padding(padding: EdgeInsets.only(right: getHorizontalSize(15)), child: IconButton(onPressed: () {controller.group133Controller.clear();}, icon: Icon(Icons.clear, color: Colors.grey.shade600)))), Padding(padding: getPadding(top: 9), child: Obx(() => ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(1));}, itemCount: controller.tradersModelObj.value.traderlistItemList.length, itemBuilder: (context, index) {TraderlistItemModel model = controller.tradersModelObj.value.traderlistItemList[index]; return TraderlistItemWidget(model, onTapTradercard: onTapTradercard);})))]))))])))); } 
onTapTradercard() { Get.bottomSheet(TraderDetOneBottomsheet(Get.put(TraderDetOneController(),),),isScrollControlled: true,); } 
 }
